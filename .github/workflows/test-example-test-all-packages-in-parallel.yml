name: Test for Example "test-all-packages-in-parallel"
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
  schedule:
    # First Sunday of every month
    # See: https://crontab.guru/#0_0_1-7_*_*/7
    - cron: '0 0 1-7 * */7'  # https://stackoverflow.com/a/73826599
  workflow_call:

jobs:
  # Define a job that lists all workspaces with a test script.
  # This job will be needed by the test job to generate the matrix of workspaces to test dynamically.
  prepare-test:
    runs-on: ubuntu-latest
    outputs:
      # Expose the package path output from the list-workspaces step for other jobs to use it.
      workspace-paths: ${{ steps.list-workspaces.outputs.workspace-paths }}
    defaults:
      run:
        working-directory: ./examples/test-all-packages-in-parallel
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Yarn is required for the yarn-workspaces-list-action to work.
      # To do this, we'll install Node.js and enable Corepack for picking up the correct yarn version here. This may vary depending on your project.
      # Note that running `yarn install` is not necessary.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'examples/test-all-packages-in-parallel/.node-version'
      - name: Enable Corepack
        run: corepack enable

      # Use the yarn-workspaces-list-action to list all workspaces that have a test script.
      - name: List workspaces with tests
        uses: ./ # Should be zetavg/yarn-workspaces-list-action@v2 when used in your own project.
        id: list-workspaces
        with:
          # A condition that checks if the workspaces has a "test" script defined in its package.json.
          condition: '[ -f "$workspace_path/package.json" ] && jq -e ".scripts.test" "$workspace_path/package.json"'
          workspace-root: ./examples/test-all-packages-in-parallel # Optional, defaults to the root of the repository (".").

  # Define a job that uses the matrix strategy to test all workspaces in parallel.
  test:
    needs:
      - prepare-test # This job needs the prepare-test job to provide the workspaces paths that need to be tested.
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Allow all jobs to complete even if one or more fails.
      matrix:
        # Use the workspaces paths from the prepare-test job to create a matrix of workspaces to test.
        dir: ${{ fromJson(needs.prepare-test.outputs.workspace-paths) }}
    defaults:
      run:
        working-directory: ./examples/test-all-packages-in-parallel
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'examples/test-all-packages-in-parallel/.node-version'
      - name: Enable Corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn install
      - name: Test
        run: |
          cd ${{ matrix.dir }}
          yarn test
